#For advanced users only!

[nxpatcher]



[fileassociations]
#This section is specifically for the drag & drop feature
#When you drag and drop a file, NXPatcher checks the file suffix
#and reads from this section to determine which command to perform.
#For example, if you drag & drop the file "00080to00081.patch", NXPatcher
#will get the suffix ("patch"), then read from the patch variable below.
#Since the patch variable is "write", NXPatcher will then perform the "write" command
#with the patch file.
#Patch files MUST be set to "write" or "read"
#EXE files MUST be set to "hijack" or "split"
#WZ files MUST be set to "version"
#Associating these files with commands other than listed above will give error messages
#These commands are case sensitive (always all lowercase)
patch: write
exe: hijack
wz: version

[read]
#This section only changes NXPatcher's behavior when using the "read" command

#"deletepatchfile" will delete the patch file after a successful patching
#If a patch file is interrupted or if there are errors, the patch file is not deleted.
#The default value is 0
deletepatchfile: 0

#If "usefastpatch" is set to 1, the entire patched file is read into memory before performing file rebuilding.
#This significantly increases processing speed at the expense of significantly increasing memory usage.
#If "usefastpatch" is set to 0, the file is read from the disk piece by piece. This lowers memory consumption
#while raising hard disk usage and negatively affecting performance.
#Setting this value to 1 will increase performance by 200-300% over setting it to 0.
#The default value is 0
usefastpatch: 0


outputfolder: Patcher
backupfiles: 0

[split]
patchfilename: ManualPatch.patch
noticefilename: ManualPatch.txt
basefilename: ManualPatch.base

[write]
basefilename: ManualPatch.base
noticefilename: ManualPatch.txt
outputfilename: ManualPatch.exe

[version]
allwzfiles: 0
